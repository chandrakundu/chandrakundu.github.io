<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python - Category - Chandra Kundu | PhD Candidate at UCF</title>
    <link>https://chandrakundu.github.io/categories/python/</link>
    <description>Chandra Kundu is a Ph.D. candidate in Big Data Analytics at the University of Central Florida, focusing on Robust PCA, Matrix Completion, and Deep Unfolding. </description>
    <generator>Hugo 0.136.3 &amp; FixIt v0.3.14</generator>
    <language>en</language>
    <lastBuildDate>Tue, 05 Nov 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://chandrakundu.github.io/categories/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Installing PyTorch with CUDA using `uv`</title>
      <link>https://chandrakundu.github.io/posts/installing-pytorch-with-cuda-using-uv/</link>
      <pubDate>Tue, 05 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://chandrakundu.github.io/posts/installing-pytorch-with-cuda-using-uv/</guid>
      <category domain="https://chandrakundu.github.io/categories/python/">Python</category>
      <description>&lt;p&gt;&lt;code&gt;uv&lt;/code&gt; is an extremely fast Python package and project manager that simplifies managing your Python environments and dependencies. However, I encountered a problem when attempting to install PyTorch with CUDA support. After some trial and error, I was able to resolve the issue. Let&amp;rsquo;s explore how to set up a project using &lt;code&gt;uv&lt;/code&gt; and install PyTorch with CUDA support on both a Windows machine and Ubuntu running on Windows Subsystem for Linux (WSL).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Handling Relative Paths in Python Projects</title>
      <link>https://chandrakundu.github.io/posts/handling-relative-paths-in-python-projects/</link>
      <pubDate>Sun, 16 Jun 2024 23:22:00 -0400</pubDate>
      <guid>https://chandrakundu.github.io/posts/handling-relative-paths-in-python-projects/</guid>
      <category domain="https://chandrakundu.github.io/categories/python/">Python</category>
      <description>&lt;p&gt;Working on Python projects often requires managing complex directory structures and handling relative paths efficiently. In this blog post, we will explore common issues related to handling relative paths and provide solutions to ensure your scripts run smoothly, regardless of how and where they are executed.&lt;/p&gt;&#xA;&lt;h2 id=&#34;project-structure&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;Project Structure&lt;/span&gt;&#xD;&#xA;  &lt;a href=&#34;#project-structure&#34; class=&#34;heading-mark&#34;&gt;&#xD;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&lt;p&gt;Before diving into the details, let&amp;rsquo;s first understand the typical structure of a Python project. A Python project usually consists of the following directories:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Testing in Python Fundamentals with Pytest</title>
      <link>https://chandrakundu.github.io/posts/python-testing-basics-pytest/</link>
      <pubDate>Mon, 12 Jun 2023 00:42:12 -0400</pubDate>
      <guid>https://chandrakundu.github.io/posts/python-testing-basics-pytest/</guid>
      <category domain="https://chandrakundu.github.io/categories/python/">Python</category>
      <description>&lt;p&gt;Testing is an essential part of developing applications. It helps ensure that the code works as expected and catches bugs early in the development process. In this article, we will explore the basics of testing in Python using the popular testing framework, Pytest.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-pytest&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;What is Pytest?&lt;/span&gt;&#xD;&#xA;  &lt;a href=&#34;#what-is-pytest&#34; class=&#34;heading-mark&#34;&gt;&#xD;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&lt;p&gt;Pytest is a testing framework for Python that makes writing and running tests simple and efficient. It provides a rich set of features for writing test cases, including fixtures, parameterized tests, and test discovery. Pytest is widely used in the Python community and is known for its simplicity and ease of use.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
